# name: CI/CD Pipeline for API Gateway

# on:
#   push:
#     branches:
#       - master
#   pull_request:
#     branches:
#       - master

# jobs:
#   build-and-push-docker:
#     name: Build and Push Docker Image
#     runs-on: ubuntu-latest

#     steps:
#       - name: Check out the code
#         uses: actions/checkout@v3

#       - name: Log in to Docker Hub
#         uses: docker/login-action@v2
#         with:
#           username: ${{ secrets.DOCKER_USERNAME }}
#           password: ${{ secrets.DOCKER_PASSWORD }}

#       - name: Set up Docker Buildx
#         run: |
#           docker buildx create --use

#       - name: Build and push Docker image for API Gateway
#         run: |
#           docker buildx build --platform linux/amd64 -t ${{ secrets.DOCKER_USERNAME }}/api-gateway:latest -f Dockerfile .
#           docker push ${{ secrets.DOCKER_USERNAME }}/api-gateway:latest

#   deploy-to-kubernetes:
#     name: Deploy API Gateway to Kubernetes
#     needs: build-and-push-docker
#     runs-on: ubuntu-latest
#     if: github.ref == 'refs/heads/master'

#     steps:
#       - name: Set up kubectl
#         uses: azure/setup-kubectl@v3
#         with:
#           version: 'latest'

#       - name: Configure kubectl
#         env:
#           KUBECONFIG: ${{ secrets.KUBECONFIG }}
#         run: |
#           mkdir -p ~/.kube
#           echo "${{ secrets.KUBECONFIG }}" > ~/.kube/config

#       - name: Apply Kubernetes manifest for API Gateway
#         run: |
#           kubectl apply -f ./k8s/api-gateway.yaml

# name: CI/CD Pipeline for API Gateway

# on:
#   push:
#     branches:
#       - master
#   pull_request:
#     branches:
#       - master

# jobs:
#   build-and-push-docker:
#     name: Build and Push Docker Image
#     runs-on: ubuntu-latest

#     steps:
#       - name: Check out the code
#         uses: actions/checkout@v3

#       - name: Log in to Docker Hub
#         uses: docker/login-action@v2
#         with:
#           username: ${{ secrets.DOCKER_USERNAME }}
#           password: ${{ secrets.DOCKER_PASSWORD }}

#       - name: Set up Docker Buildx
#         uses: docker/setup-buildx-action@v2

#       - name: Build and push Docker image for API Gateway
#         run: |
#           docker buildx build --platform linux/amd64 -t ${{ secrets.DOCKER_USERNAME }}/api-gateway:latest -f Dockerfile --push .

#   deploy-to-kubernetes:
#     name: Deploy API Gateway to Kubernetes
#     needs: build-and-push-docker
#     runs-on: ubuntu-latest
#     if: github.ref == 'refs/heads/master'

#     steps:
#       - name: Set up kubectl
#         uses: azure/setup-kubectl@v3
#         with:
#           version: 'latest'

#       - name: Configure kubectl
#         env:
#           KUBECONFIG: ${{ secrets.KUBECONFIG }}
#         run: |
#           mkdir -p ~/.kube
#           echo "${{ secrets.KUBECONFIG }}" > ~/.kube/config

#       - name: Apply Kubernetes manifest for API Gateway
#         run: |
#           kubectl apply -f k8s/api-gateway.yaml
# name: CI/CD Pipeline for API Gateway

# on:
#   push:
#     branches:
#       - master
#   pull_request:
#     branches:
#       - master

# jobs:
#   build-and-push-docker:
#     name: Build and Push Docker Image
#     runs-on: ubuntu-latest

#     steps:
#       - name: Check out the code
#         uses: actions/checkout@v3

#       - name: Log in to Docker Hub
#         uses: docker/login-action@v2
#         with:
#           username: ${{ secrets.DOCKER_USERNAME }}
#           password: ${{ secrets.DOCKER_PASSWORD }}

#       - name: Set up Docker Buildx
#         uses: docker/setup-buildx-action@v2

#       - name: Build and push Docker image for API Gateway
#         run: |
#           docker buildx build --platform linux/amd64 -t ${{ secrets.DOCKER_USERNAME }}/api-gateway:latest -f Dockerfile --push .

#   deploy-to-kubernetes:
#     name: Deploy API Gateway to Kubernetes
#     needs: build-and-push-docker
#     runs-on: ubuntu-latest
#     if: github.ref == 'refs/heads/master'

#     steps:
#       - name: Check out the code
#         uses: actions/checkout@v3

#       - name: Set up kubectl
#         uses: azure/setup-kubectl@v3
#         with:
#           version: 'latest'

#       - name: Configure kubectl
#         env:
#           KUBECONFIG: ${{ secrets.KUBECONFIG }}
#         run: |
#           mkdir -p ~/.kube
#           echo "${{ secrets.KUBECONFIG }}" > ~/.kube/config

#       - name: Debug - List Root Directory
#         run: ls -R .

#       - name: Debug - List Files in api-gateway/k8s Directory
#         run: ls -R ../

#       - name: Apply Kubernetes manifest for API Gateway
#         run: |
#             kubectl apply -f ../k8s/api-gateway.yaml


name: CI/CD Pipeline for API Gateway

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build-and-push-docker:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: Check out the code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push Docker image for API Gateway
        run: |
          docker buildx build --platform linux/amd64 -t ${{ secrets.DOCKER_USERNAME }}/api-gateway:latest -f Dockerfile --push .

  deploy-to-kubernetes:
    name: Deploy API Gateway to Kubernetes
    needs: build-and-push-docker
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'

    steps:
      - name: Check out the code
        uses: actions/checkout@v3

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Configure kubectl
        env:
          KUBECONFIG: ${{ secrets.KUBECONFIG }}
        run: |
          mkdir -p ~/.kube
          echo "${{ secrets.KUBECONFIG }}" > ~/.kube/config

      - name: Debug - List Root Directory
        run: ls -R .

      - name: Debug - List Files in bookyourshow-api-gateway-service/k8s Directory
        run: ls -R k8s

      - name: Apply Kubernetes manifest for API Gateway
        run: |
          kubectl apply -f k8s/api-gateway.yaml
